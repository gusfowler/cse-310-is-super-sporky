#1 | 

void Change(A, heapsize, i, newValue) {
    if (i < heapsize) {
        if (A[i] < newValue) {
            increase-key(A, heapsize, i, newValue)
        } else if (A[i] > newValue) {
            decrease-key(A, heapsize, i, newValue)
        }
    }
}

#2 |

A = {3, 2, 9, 0, 7, 5, 4, 8, 6, 1}

Pivot 9: {3, 2, 0, 7, 5, 4, 8, 6, 1} | {9}
Pivot 8: {3, 2, 1, 0, 7, 5, 4, 6} | {8}
Pivot 7: {3, 2, 1, 0, 6, 5, 4} | {7}
Pivot 6: {3, 2, 1, 0, 4, 5} | {6}
Pivot 5: {3, 2, 1, 0, 4} | {5}
Pivot 4: {3, 2, 1, 0} | {4}
Pivot 3: {0, 2, 1} | {3}
Pivot 2: {0, 1} | {2}
Pivot 1: {0} | {1}
Return 0

complexity = O(n^2)

#5 |
